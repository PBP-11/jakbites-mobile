import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:jakbites_mobile/models/resutarant_model.dart';
import 'package:pbp_django_auth/pbp_django_auth.dart';
import 'package:provider/provider.dart';

class RestaurantReview extends StatefulWidget {
  final Restaurant resto;
  RestaurantReview(this.resto, {super.key});
  // print(resto);

  @override
  State<RestaurantReview> createState() => _RestaurantReviewState();
}

class _RestaurantReviewState extends State<RestaurantReview> {  
	int _ratingRestaurant = -1;
	String _reviewRestaurant = "";
  final _formKey = GlobalKey<FormState>();
  // print(context.watch<CookieRequest>());
  // print(Widget.resto);
  
  @override
  Widget build(BuildContext context) {
    var request = context.watch<CookieRequest>();
    // print(request.cookies.entries.last.value.name);
    return Scaffold(
      body: Form(
        key: _formKey,
        child: 
          Column(
            children: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: TextFormField(
                  decoration: InputDecoration(
                    hintText: "Rating Restoran",
                    labelText: "Rating Restoran",
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                  onChanged: (String? value) {
                    setState(() {
                      _ratingRestaurant = int.tryParse(value!) ?? 0;
                    });
                  },
                  validator: (String? value) {
                    if (value == null || value.isEmpty) {
                      return "Restaurant Rating tidak boleh kosong!";
                    }
                    if (int.tryParse(value) == null) {
                      return "Restaurant Rating harus berupa angka!";
                    }
                    int temp = int.parse(value);
                    if (temp < 1 || temp > 5) {
                      return "Rating diantara 1 sampai 5";
                    }
                    return null;
                  },
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: TextFormField(
                  decoration: InputDecoration(
                    hintText: "Review Restaurant",
                    labelText: "Review Restaurant",
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                  onChanged: (String? value) {
                    setState(() {
                      _reviewRestaurant = value!;
                    });
                  },
                  validator: (String? value) {
                    if (value == null || value.isEmpty) {
                      return "Review Restoran tidak boleh kosong!";
                    }
                    return null;
                  },
                ),
              ),
              Align(
                alignment: Alignment.bottomCenter,
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ElevatedButton(
                    style: ButtonStyle(
                      backgroundColor: WidgetStateProperty.all(
                          Theme.of(context).colorScheme.primary),
                    ),
                    onPressed: () async {
                      if (_formKey.currentState!.validate()) {
                        // debugPrint(request);
                        final response = await request.postJson(
                            "http://localhost:8000/restaurant/crf/",
                            jsonEncode(<String, dynamic>{
                                'restaurant': widget.resto.pk,
                                'review': _reviewRestaurant,
                                'rating': _ratingRestaurant,
                            }),
                        );
                        if (context.mounted) {
                            if (response['status'] == 'success') {
                                ScaffoldMessenger.of(context)
                                    .showSnackBar(const SnackBar(
                                content: Text("Mood baru berhasil disimpan!"),
                                ));
                                Navigator.pop(context);
                            } else {  
                                ScaffoldMessenger.of(context)
                                    .showSnackBar(const SnackBar(
                                    content:
                                        Text("Terdapat kesalahan, silakan coba lagi."),
                                ));
                            }
                        }
                      }
                    },
                    child: const Text(
                      "Save",
                      style: TextStyle(color: Colors.white),
                    ),
                  ),
                ),
              ),
            ],
          ),
      ),
    );
  }
}